$selectedBorder: 3px;
$headerGap: 255px;
$placeholderColorValidationFailed: red;

@import "./_templateStyles/verticalContainer.scss";
@import "./_templateStyles/avatar.scss";

.contentHeader1 {
  text-transform: uppercase;
  padding-left: 5px;
  display: block;
  font-size: 2em;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  font-weight: bold;
  unicode-bidi: isolate;
}

.headerMarginTop {
  margin-block-start: 0.5em;
}

.headerMarginBottom {
  margin-block-end: 0.5em;
}

.headerMarginTopBottom {
  margin-block-end: 0.5em;
  margin-block-start: 0.5em;
}

.contentHeader2 {
  text-transform: uppercase;
  padding-left: 5px;
  margin-block-end: 0.67em;
}

// TO-DO move to page

.inputFieldWrapper {
  align-items: center;
  width: 100%;
}

.validationFailed {
  color: red !important;
}

// Include vendor prefixes for better browser support
.validationFailed::-webkit-input-placeholder {
  color: $placeholderColorValidationFailed !important;
}

.validationFailed:-moz-placeholder {
  color: $placeholderColorValidationFailed !important;
}

.validationFailed::-moz-placeholder {
  color: $placeholderColorValidationFailed !important;
}

.validationFailed:-ms-input-placeholder {
  color: $placeholderColorValidationFailed !important;
}

.icon-send {
  margin-left: 10px;
  cursor: pointer;
  color: var(--themeColor2); // Default icon color
  transition: color 0.3s ease;
  text-decoration: none;
}

.icon-send:hover {
  color: var(--themeColor1); // Change to desired hover color
}

.linkClicked {
  color: var(--themeColor3); // Change to the color when link is clicked
}

.closeButton {
  color: var(--themeTextColor1) !important;
  background-color: var(--themeColor1) !important;
  border-color: var(--themeColor1) !important;
}

.closeButton:hover {
  color: var(--themeTextColor1) !important;
  background-color: var(--themeColor3) !important;
  cursor: pointer;
  border-color: var(--themeColor3) !important;
}

@media (min-aspect-ratio: 1/1) {
  .closeButtonContainer {
    scale: 0.8 !important;
  }
}

.closeButtonContainer {
  position: absolute;
  right: 10px;
  top: 5px;
  scale: 0.6;
}

.pageTemplate {
  position: absolute;
  width: 100%;
  overflow: hidden;
  pointer-events: none;
}

.scrollContainer {
  height: 100vh;
  overflow-y: scroll;
  opacity: 0;
  transition: opacity 0.3s ease;
  position: relative;
  pointer-events: none;
}

.scrollContainer.visible {
  opacity: 1 !important;
  visibility: visible;
  pointer-events: all;
}

.scrollTopButton {
  position: fixed;
  bottom: 94px;
  left: 50%;
  transform: translateX(-50%);
  width: 35px;
  height: 35px;
  background-color: var(--themeColor2);
  color: var(--themeColor1);
  font-family: var(--themeFont2);
  font-size: clamp(20px, 1vh, 70px);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 20%;
  cursor: pointer;
  z-index: 2000;
  pointer-events: all;
  transition: opacity 0.6s ease;
}

.backgroundImage {
  position: relative;
  width: 100%;
  height: $headerGap;
  background: url("../assets/page-background-landscape.jpg") no-repeat top center;
  background-size: cover;
}

/* Background image for landscape mode */
@media (min-aspect-ratio: 1/1) {
  .backgroundImage {
    background: none; /* Un sets the background image */
  }
}

.contentContainer {
  position: relative;
  margin-top: -40px;
  min-height: calc(100vh - 255px);
  background-color: var(--themeColor6);
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  box-shadow: 0 -10px 30px rgba(0, 0, 0, 0.1);
  padding-top: 10px;
  padding-bottom: 180px;
  display: flex;
  justify-content: center;
  width: 100vw;
  left: 0;
}

@media (max-width: 300px) {
  .page0TopMarginStyle {
    margin-top: -110px !important;
  }
}
@media (max-width: 500px) {
  .page0TopMarginStyle {
    margin-top: -90px;
  }
}
@media (max-width: 600px) {
  .page0TopMarginStyle {
    margin-top: -80px;
  }
}
@media (min-width: 601px) and (max-width: 1200px) {
  .page0TopMarginStyle {
    margin-top: -40px;
  }
}

.contentBoxWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%; /* Ensure it takes the full width of the parent */
}

.contentBox {
  padding: 20px;
  width: 800px;
}

.container {
  display: flex;
  justify-content: space-around;
  box-sizing: border-box;
  gap: 5px;
  padding-bottom: 10px;
  padding-top: 20px;
}

.square {
  flex: 1 1 calc(33.33% - 14px);
  aspect-ratio: 1 / 1;
  background-color: var(--mainButtonColor);
  border-radius: 15px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border: solid $selectedBorder var(--themeColor1);
}

.squareDisabled {
  background-color: var(--themeColor1) !important;
  opacity: 0.7;
  cursor: default;
}

.square:hover {
  background-color: var(--themeColor3);
  border: solid $selectedBorder var(--themeColor3);
  // border: 4px solid var(--themeColor3);
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.selectedSquare > .squareContent {
  color: var(--themeColor2) !important;
}

.squareInner {
  width: 100%;
  height: 100%;
  position: relative;
}

.squareInner::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0.4; /* Adjust this value to change the opacity */
}

.squareInner > * {
  position: relative;
}

@media (min-aspect-ratio: 1/1) {
  .square {
    height: 110px;
    aspect-ratio: auto;
  }

  .squareInner {
    width: 155px;
    height: 155px;
  }

  .contentContainer {
    width: var(--gridWidth);
    left: 10vw;
  }
}

.square::before {
  opacity: 0.3;
  content: "";
  position: absolute; /* Change to absolute positioning */
  height: 100%;
  padding-left: 100%;
  background-size: cover;
  background-position: center;
}

.squareContent {
  position: absolute; /* Position content absolutely */
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: var(--themeTextColor1); /* Adjust the text color as needed */
  font-size: 1em; /* Set a base font size for scaling */
}

.squareContent .sportName {
  transition: transform 0.1s linear;
}

.squareContent:hover .sportName {
  // transform: scale(1.1); /* Increase image size on hover */
}

.squareContent:hover .sportName {
  // transform: scale(1.1); /* Increase image size on hover */
}

.squareContent div {
  margin: 5px 0;
  max-height: 100%;
}

.imageButton {
  height: clamp(50px, 10vh, 100px); /* Default values */
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  transition: height 0.3s ease;
  border: solid $selectedBorder var(--themeColor1);
}

@media (max-width: 600px) {
  .imageButton {
    height: clamp(30px, 8vh, 80px); /* Values for small screens */
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  .imageButton {
    height: clamp(40px, 12vh, 90px); /* Values for medium screens */
  }
}

@media (min-width: 1201px) {
  .imageButton {
    height: clamp(50px, 15vh, 110px); /* Values for large screens */
  }
}

.imageButton img {
  max-height: 80%;
  max-width: 100%;
  width: auto;
  object-fit: contain;
  transition: transform 0.3s ease;
}

.imageButton:hover {
  background-color: var(--themeColor3);
  border: solid $selectedBorder var(--themeColor3);
  cursor: pointer;
}

.imageButton:hover img {
  transform: scale(1.1);
}

.squareAfl::before {
  background-image: url("@assets/sports-field-afl.svg");
}

.squareAmericanFootball::before {
  background-image: url("@assets/sports-field-american-football.svg");
}

.squareBaseball::before {
  background-image: url("@assets/sports-field-baseball.svg");
}

.squareBasketball::before {
  background-image: url("@assets/sports-field-basketball.svg");
}

.squareCricket::before {
  background-image: url("@assets/sports-field-cricket.svg");
}

.squareIceHockey::before {
  background-image: url("@assets/sports-field-ice-hockey.svg");
}

.squareRugby::before {
  background-image: url("@assets/sports-field-rugby.svg");
}

.squareSoccer::before {
  background-image: url("@assets/sports-field-soccer.svg");
}

.squareTennis::before {
  background-image: url("@assets/sports-field-tennis.svg");
}

.comingSoon {
  font-family: var(--themeFont2);
  font-size: xx-small;
  color: var(--themeColor4);
  font-size: clamp(0em, 1.5vw, 1.1rem);
}

.sportName {
  font-size: 4vw;
}

@media (min-aspect-ratio: 1/1) {
  .sportName {
    font-size: clamp(1em, 2vw, 1.5rem);
  }
}

.eventItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 70px; // Adjust height as needed
  width: 100%;
  background-color: var(--mainButtonColor);
  border-radius: 15px;
  transition: all 0.3s ease;
  margin-bottom: 10px;
  position: relative;
  pointer-events: none;
}

.eventColumn {
  flex: 1 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.eventColumn img {
  width: 35px; // Set an appropriate width
  height: auto;
}

.teamName {
  font-size: clamp(0.8em, 2vw, 1.5rem);
  color: var(--themeTextColor1);
  font-family: var(--themeFont2);
  margin-top: 7px;
}

@media (min-aspect-ratio: 1/1) {
  .teamName {
    font-size: clamp(1em, 1.2vw, 1.5rem);
  }
}

.eventMiddleColumn {
  font-size: clamp(0.8em, 1vw, 1.5rem);
  text-align: center;
  flex: 0.6 1;
  color: var(--themeTextColor1);
  font-family: var(--themeFont2);
}

.eventDateMiddle {
  font-size: 1vw !important;
}

@media (min-aspect-ratio: 1/1) {
  .eventDate {
    font-size: clamp(1em, 1.2vw, 1.5rem);
  }
}

.leagueLogo {
  width: 50px; // Adjust the size as needed
  height: auto;
}

.checkbox {
  color: var(--themeColor2);
  font-size: clamp(1em, 4vw, 1.5rem);
  cursor: pointer;
  position: absolute; /* Add this line */
  top: 10px; /* Adjust the position as needed */
  left: 10px; /* Adjust the position as needed */
}

.unSelected {
  opacity: 0.5;
}

.unSelected .eventColumn .checkbox {
  opacity: 1 !important;
}

.iconButtonNoBackground {
  color: var(--themeColor1);
  background-color: var(--themeColor2);
  margin-top: 10px;
  border-radius: clamp(1rem, 5vw, 1.5rem);
  font-size: clamp(1rem, 5vw, 1.5rem);
  height: clamp(2rem, 10vw, 3rem);
  width: clamp(2rem, 10vw, 3rem);
  display: flex;
  justify-content: center;
  align-items: center;
}

.iconButtonNoBackground:hover {
  cursor: pointer;
  background-color: var(--themeColor4);
}

.saveAnimationWrapper {
  display: flex;
  justify-content: center;
  margin-top: -13px;
}
